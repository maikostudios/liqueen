import { createApp } from "vue";
import App from "./App.vue";
import router from "./router";
import "./assets/styles/main.css";
import LicenseService from "./services/LicenseService.js";
import UpdateService from "./services/UpdateService.js";
import FirestoreSetup from "./services/FirestoreSetup.js";

const app = createApp(App);
app.use(router);

// Exponer LicenseService globalmente para acceso desde Electron
window.LicenseService = LicenseService;

// Inicializar servicios de licencia y actualizaciones
const initializeServices = async () => {
  try {
    // Inicializar configuraci√≥n de Firestore
    console.log("üîß Inicializando base de datos...");
    const firestoreInitialized = await FirestoreSetup.initialize();

    if (!firestoreInitialized) {
      console.log("üß™ Continuando en modo desarrollo sin Firestore");
    }

    // Verificar estado de licencia al iniciar
    console.log("üîç Verificando estado de licencia...");
    const licenseStatus = await LicenseService.getLicenseStatus();

    if (licenseStatus.isValid) {
      console.log("‚úÖ Licencia v√°lida encontrada");

      // Programar verificaciones peri√≥dicas de actualizaci√≥n
      UpdateService.schedulePeriodicCheck((updateInfo) => {
        if (updateInfo.hasUpdate) {
          console.log(
            "üÜï Nueva actualizaci√≥n disponible:",
            updateInfo.latestVersion
          );

          // Mostrar notificaci√≥n de actualizaci√≥n (opcional)
          if (UpdateService.getUpdateNotificationPreference()) {
            // En una implementaci√≥n real, mostrar una notificaci√≥n toast
            console.log("üì¢ Notificaci√≥n de actualizaci√≥n habilitada");
          }
        }
      });
    } else {
      console.log("‚ö†Ô∏è No se encontr√≥ licencia v√°lida");
    }
  } catch (error) {
    console.log("‚ÑπÔ∏è No hay licencia configurada, redirigiendo a registro");
  }
};

// Montar la aplicaci√≥n
app.mount("#app");

// Inicializar servicios despu√©s del montaje
initializeServices();
